# OSS Compliance Scanner를 위한 멀티 스테이지 Dockerfile
# 이 파일을 Dockerfile로 복사하고 필요에 따라 수정하세요

# 빌드 스테이지
FROM golang:1.22-alpine AS builder

# 빌드 의존성 설치
RUN apk add --no-cache git gcc musl-dev sqlite-dev

# 작업 디렉토리 설정
WORKDIR /app

# Go 모듈 파일 복사
COPY go.mod go.sum ./

# 의존성 다운로드
RUN go mod download

# 소스 코드 복사
COPY . .

# 애플리케이션 빌드
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o oss-compliance-scanner .

# 도구 스테이지 - Syft와 Grype 다운로드
FROM alpine:latest AS tools

# 도구 다운로드를 위한 curl과 tar 설치
RUN apk add --no-cache curl tar

# Syft 다운로드
RUN curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

# Grype 다운로드
RUN curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

# 런타임 스테이지
FROM alpine:latest

# 런타임 의존성 설치
RUN apk add --no-cache \
    ca-certificates \
    git \
    sqlite \
    tzdata \
    curl \
    bash

# 비루트 사용자 생성
RUN addgroup -g 1001 oss-scanner && \
    adduser -D -u 1001 -G oss-scanner oss-scanner

# 작업 디렉토리 설정
WORKDIR /app

# 빌더 스테이지에서 바이너리 복사
COPY --from=builder /app/oss-compliance-scanner /usr/local/bin/oss-compliance-scanner

# 도구 스테이지에서 스캐닝 도구 복사
COPY --from=tools /usr/local/bin/syft /usr/local/bin/syft
COPY --from=tools /usr/local/bin/grype /usr/local/bin/grype

# 설정 파일 및 템플릿 복사
COPY --chown=oss-scanner:oss-scanner .oss-compliance-scanner.yaml.sample /app/.oss-compliance-scanner.yaml
COPY --chown=oss-scanner:oss-scanner custom-rules.yaml.sample /app/custom-rules.yaml
COPY --chown=oss-scanner:oss-scanner db/ /app/db/
COPY --chown=oss-scanner:oss-scanner web/ /app/web/
COPY --chown=oss-scanner:oss-scanner examples/ /app/examples/

# 필요한 디렉토리 생성
RUN mkdir -p /app/cache /app/logs /tmp/oss-scanner && \
    chown -R oss-scanner:oss-scanner /app /tmp/oss-scanner

# 볼륨 설정
VOLUME ["/app/cache", "/app/logs", "/tmp/oss-scanner"]

# 비루트 사용자로 전환
USER oss-scanner

# 헬스 체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# 포트 노출
EXPOSE 8080

# 환경 변수 설정
ENV CGO_ENABLED=1
ENV GIN_MODE=release
ENV OSS_SCANNER_LOGGING_LEVEL=info
ENV OSS_SCANNER_LOGGING_FORMAT=json

# 기본 명령어
CMD ["oss-compliance-scanner", "server", "--host", "0.0.0.0", "--port", "8080"] 